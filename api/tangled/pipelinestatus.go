// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package tangled

// schema: sh.tangled.pipeline.status

import (
	"github.com/bluesky-social/indigo/lex/util"
)

const (
	PipelineStatusNSID = "sh.tangled.pipeline.status"
)

func init() {
	util.RegisterType("sh.tangled.pipeline.status", &PipelineStatus{})
} //
// RECORDTYPE: PipelineStatus
type PipelineStatus struct {
	LexiconTypeID string `json:"$type,const=sh.tangled.pipeline.status" cborgen:"$type,const=sh.tangled.pipeline.status"`
	// error: error message if failed
	Error *string `json:"error,omitempty" cborgen:"error,omitempty"`
	// exitCode: exit code if failed
	ExitCode *int64 `json:"exitCode,omitempty" cborgen:"exitCode,omitempty"`
	// finishedAt: pipeline finish time, if finished
	FinishedAt *string `json:"finishedAt,omitempty" cborgen:"finishedAt,omitempty"`
	// pipeline: pipeline at ref
	Pipeline string `json:"pipeline" cborgen:"pipeline"`
	// startedAt: pipeline start time
	StartedAt string `json:"startedAt" cborgen:"startedAt"`
	// status: Pipeline status
	Status string `json:"status" cborgen:"status"`
	// updatedAt: pipeline last updated time
	UpdatedAt string `json:"updatedAt" cborgen:"updatedAt"`
}
