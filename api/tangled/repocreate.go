// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package tangled

// schema: sh.tangled.repo.create

import (
	"context"

	"github.com/bluesky-social/indigo/lex/util"
)

const (
	RepoCreateNSID = "sh.tangled.repo.create"
)

// RepoCreate_Input is the input argument to a sh.tangled.repo.create call.
type RepoCreate_Input struct {
	// default_branch: Default branch name
	Default_branch *string `json:"default_branch,omitempty" cborgen:"default_branch,omitempty"`
	// did: DID of the user creating the repository
	Did string `json:"did" cborgen:"did"`
	// name: Name of the repository
	Name string `json:"name" cborgen:"name"`
}

// RepoCreate calls the XRPC method "sh.tangled.repo.create".
func RepoCreate(ctx context.Context, c util.LexClient, input *RepoCreate_Input) error {
	if err := c.LexDo(ctx, util.Procedure, "application/json", "sh.tangled.repo.create", nil, input, nil); err != nil {
		return err
	}

	return nil
}
