// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package tangled

// schema: sh.tangled.repo.forkSync

import (
	"context"

	"github.com/bluesky-social/indigo/lex/util"
)

const (
	RepoForkSyncNSID = "sh.tangled.repo.forkSync"
)

// RepoForkSync_Input is the input argument to a sh.tangled.repo.forkSync call.
type RepoForkSync_Input struct {
	// branch: Branch to sync
	Branch string `json:"branch" cborgen:"branch"`
	// did: DID of the fork owner
	Did string `json:"did" cborgen:"did"`
	// name: Name of the forked repository
	Name string `json:"name" cborgen:"name"`
	// source: AT-URI of the source repository
	Source string `json:"source" cborgen:"source"`
}

// RepoForkSync calls the XRPC method "sh.tangled.repo.forkSync".
func RepoForkSync(ctx context.Context, c util.LexClient, input *RepoForkSync_Input) error {
	if err := c.LexDo(ctx, util.Procedure, "application/json", "sh.tangled.repo.forkSync", nil, input, nil); err != nil {
		return err
	}

	return nil
}
