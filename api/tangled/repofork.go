// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package tangled

// schema: sh.tangled.repo.fork

import (
	"context"

	"github.com/bluesky-social/indigo/lex/util"
)

const (
	RepoForkNSID = "sh.tangled.repo.fork"
)

// RepoFork_Input is the input argument to a sh.tangled.repo.fork call.
type RepoFork_Input struct {
	// did: DID of the user creating the fork
	Did string `json:"did" cborgen:"did"`
	// name: Name for the forked repository (defaults to basename of source)
	Name *string `json:"name,omitempty" cborgen:"name,omitempty"`
	// source: Source repository URL to fork from
	Source string `json:"source" cborgen:"source"`
}

// RepoFork calls the XRPC method "sh.tangled.repo.fork".
func RepoFork(ctx context.Context, c util.LexClient, input *RepoFork_Input) error {
	if err := c.LexDo(ctx, util.Procedure, "application/json", "sh.tangled.repo.fork", nil, input, nil); err != nil {
		return err
	}

	return nil
}
